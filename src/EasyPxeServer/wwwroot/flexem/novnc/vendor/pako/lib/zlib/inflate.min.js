/**
 * Minified by jsDelivr using Terser v5.39.0.
 * Original file: /npm/@flexem/novnc@1.1.6/vendor/pako/lib/zlib/inflate.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import*as utils from"../utils/common.js";import adler32 from"./adler32.js";import crc32 from"./crc32.js";import inflate_fast from"./inffast.js";import inflate_table from"./inftrees.js";var CODES=0,LENS=1,DISTS=2;export const Z_FINISH=4;export const Z_BLOCK=5;export const Z_TREES=6;export const Z_OK=0;export const Z_STREAM_END=1;export const Z_NEED_DICT=2;export const Z_STREAM_ERROR=-2;export const Z_DATA_ERROR=-3;export const Z_MEM_ERROR=-4;export const Z_BUF_ERROR=-5;export const Z_DEFLATED=8;var HEAD=1,FLAGS=2,TIME=3,OS=4,EXLEN=5,EXTRA=6,NAME=7,COMMENT=8,HCRC=9,DICTID=10,DICT=11,TYPE=12,TYPEDO=13,STORED=14,COPY_=15,COPY=16,TABLE=17,LENLENS=18,CODELENS=19,LEN_=20,LEN=21,LENEXT=22,DIST=23,DISTEXT=24,MATCH=25,LIT=26,CHECK=27,LENGTH=28,DONE=29,BAD=30,MEM=31,SYNC=32,ENOUGH_LENS=852,ENOUGH_DISTS=592,MAX_WBITS=15,DEF_WBITS=MAX_WBITS;function zswap32(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}function InflateState(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new utils.Buf16(320),this.work=new utils.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function inflateResetKeep(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=HEAD,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new utils.Buf32(ENOUGH_LENS),t.distcode=t.distdyn=new utils.Buf32(ENOUGH_DISTS),t.sane=1,t.back=-1,0):-2}function inflateReset(e){var t;return e&&e.state?((t=e.state).wsize=0,t.whave=0,t.wnext=0,inflateResetKeep(e)):-2}function inflateReset2(e,t){var a,i;return e&&e.state?(i=e.state,t<0?(a=0,t=-t):(a=1+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?-2:(null!==i.window&&i.wbits!==t&&(i.window=null),i.wrap=a,i.wbits=t,inflateReset(e))):-2}function inflateInit2(e,t){var a,i;return e?(i=new InflateState,e.state=i,i.window=null,0!==(a=inflateReset2(e,t))&&(e.state=null),a):-2}function inflateInit(e){return inflateInit2(e,DEF_WBITS)}var lenfix,distfix,virgin=!0;function fixedtables(e){if(virgin){var t;for(lenfix=new utils.Buf32(512),distfix=new utils.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(inflate_table(LENS,e.lens,0,288,lenfix,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;inflate_table(DISTS,e.lens,0,32,distfix,0,e.work,{bits:5}),virgin=!1}e.lencode=lenfix,e.lenbits=9,e.distcode=distfix,e.distbits=5}function updatewindow(e,t,a,i){var n,s=e.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new utils.Buf8(s.wsize)),i>=s.wsize?(utils.arraySet(s.window,t,a-s.wsize,s.wsize,0),s.wnext=0,s.whave=s.wsize):((n=s.wsize-s.wnext)>i&&(n=i),utils.arraySet(s.window,t,a-i,n,s.wnext),(i-=n)?(utils.arraySet(s.window,t,a-i,i,0),s.wnext=i,s.whave=s.wsize):(s.wnext+=n,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=n))),0}function inflate(e,t){var a,i,n,s,o,r,l,d,f,c,h,b,k,m,w,E,u,g,_,x,D,T,v,S,p=0,A=new utils.Buf8(4),N=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return-2;(a=e.state).mode===TYPE&&(a.mode=TYPEDO),o=e.next_out,n=e.output,l=e.avail_out,s=e.next_in,i=e.input,r=e.avail_in,d=a.hold,f=a.bits,c=r,h=l,T=0;e:for(;;)switch(a.mode){case HEAD:if(0===a.wrap){a.mode=TYPEDO;break}for(;f<16;){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}if(2&a.wrap&&35615===d){a.check=0,A[0]=255&d,A[1]=d>>>8&255,a.check=crc32(a.check,A,2,0),d=0,f=0,a.mode=FLAGS;break}if(a.flags=0,a.head&&(a.head.done=!1),!(1&a.wrap)||(((255&d)<<8)+(d>>8))%31){e.msg="incorrect header check",a.mode=BAD;break}if(8!=(15&d)){e.msg="unknown compression method",a.mode=BAD;break}if(f-=4,D=8+(15&(d>>>=4)),0===a.wbits)a.wbits=D;else if(D>a.wbits){e.msg="invalid window size",a.mode=BAD;break}a.dmax=1<<D,e.adler=a.check=1,a.mode=512&d?DICTID:TYPE,d=0,f=0;break;case FLAGS:for(;f<16;){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}if(a.flags=d,8!=(255&a.flags)){e.msg="unknown compression method",a.mode=BAD;break}if(57344&a.flags){e.msg="unknown header flags set",a.mode=BAD;break}a.head&&(a.head.text=d>>8&1),512&a.flags&&(A[0]=255&d,A[1]=d>>>8&255,a.check=crc32(a.check,A,2,0)),d=0,f=0,a.mode=TIME;case TIME:for(;f<32;){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}a.head&&(a.head.time=d),512&a.flags&&(A[0]=255&d,A[1]=d>>>8&255,A[2]=d>>>16&255,A[3]=d>>>24&255,a.check=crc32(a.check,A,4,0)),d=0,f=0,a.mode=OS;case OS:for(;f<16;){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}a.head&&(a.head.xflags=255&d,a.head.os=d>>8),512&a.flags&&(A[0]=255&d,A[1]=d>>>8&255,a.check=crc32(a.check,A,2,0)),d=0,f=0,a.mode=EXLEN;case EXLEN:if(1024&a.flags){for(;f<16;){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}a.length=d,a.head&&(a.head.extra_len=d),512&a.flags&&(A[0]=255&d,A[1]=d>>>8&255,a.check=crc32(a.check,A,2,0)),d=0,f=0}else a.head&&(a.head.extra=null);a.mode=EXTRA;case EXTRA:if(1024&a.flags&&((b=a.length)>r&&(b=r),b&&(a.head&&(D=a.head.extra_len-a.length,a.head.extra||(a.head.extra=new Array(a.head.extra_len)),utils.arraySet(a.head.extra,i,s,b,D)),512&a.flags&&(a.check=crc32(a.check,i,b,s)),r-=b,s+=b,a.length-=b),a.length))break e;a.length=0,a.mode=NAME;case NAME:if(2048&a.flags){if(0===r)break e;b=0;do{D=i[s+b++],a.head&&D&&a.length<65536&&(a.head.name+=String.fromCharCode(D))}while(D&&b<r);if(512&a.flags&&(a.check=crc32(a.check,i,b,s)),r-=b,s+=b,D)break e}else a.head&&(a.head.name=null);a.length=0,a.mode=COMMENT;case COMMENT:if(4096&a.flags){if(0===r)break e;b=0;do{D=i[s+b++],a.head&&D&&a.length<65536&&(a.head.comment+=String.fromCharCode(D))}while(D&&b<r);if(512&a.flags&&(a.check=crc32(a.check,i,b,s)),r-=b,s+=b,D)break e}else a.head&&(a.head.comment=null);a.mode=HCRC;case HCRC:if(512&a.flags){for(;f<16;){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}if(d!==(65535&a.check)){e.msg="header crc mismatch",a.mode=BAD;break}d=0,f=0}a.head&&(a.head.hcrc=a.flags>>9&1,a.head.done=!0),e.adler=a.check=0,a.mode=TYPE;break;case DICTID:for(;f<32;){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}e.adler=a.check=zswap32(d),d=0,f=0,a.mode=DICT;case DICT:if(0===a.havedict)return e.next_out=o,e.avail_out=l,e.next_in=s,e.avail_in=r,a.hold=d,a.bits=f,2;e.adler=a.check=1,a.mode=TYPE;case TYPE:if(5===t||6===t)break e;case TYPEDO:if(a.last){d>>>=7&f,f-=7&f,a.mode=CHECK;break}for(;f<3;){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}switch(a.last=1&d,f-=1,3&(d>>>=1)){case 0:a.mode=STORED;break;case 1:if(fixedtables(a),a.mode=LEN_,6===t){d>>>=2,f-=2;break e}break;case 2:a.mode=TABLE;break;case 3:e.msg="invalid block type",a.mode=BAD}d>>>=2,f-=2;break;case STORED:for(d>>>=7&f,f-=7&f;f<32;){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}if((65535&d)!=(d>>>16^65535)){e.msg="invalid stored block lengths",a.mode=BAD;break}if(a.length=65535&d,d=0,f=0,a.mode=COPY_,6===t)break e;case COPY_:a.mode=COPY;case COPY:if(b=a.length){if(b>r&&(b=r),b>l&&(b=l),0===b)break e;utils.arraySet(n,i,s,b,o),r-=b,s+=b,l-=b,o+=b,a.length-=b;break}a.mode=TYPE;break;case TABLE:for(;f<14;){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}if(a.nlen=257+(31&d),d>>>=5,f-=5,a.ndist=1+(31&d),d>>>=5,f-=5,a.ncode=4+(15&d),d>>>=4,f-=4,a.nlen>286||a.ndist>30){e.msg="too many length or distance symbols",a.mode=BAD;break}a.have=0,a.mode=LENLENS;case LENLENS:for(;a.have<a.ncode;){for(;f<3;){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}a.lens[N[a.have++]]=7&d,d>>>=3,f-=3}for(;a.have<19;)a.lens[N[a.have++]]=0;if(a.lencode=a.lendyn,a.lenbits=7,v={bits:a.lenbits},T=inflate_table(CODES,a.lens,0,19,a.lencode,0,a.work,v),a.lenbits=v.bits,T){e.msg="invalid code lengths set",a.mode=BAD;break}a.have=0,a.mode=CODELENS;case CODELENS:for(;a.have<a.nlen+a.ndist;){for(;E=(p=a.lencode[d&(1<<a.lenbits)-1])>>>16&255,u=65535&p,!((w=p>>>24)<=f);){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}if(u<16)d>>>=w,f-=w,a.lens[a.have++]=u;else{if(16===u){for(S=w+2;f<S;){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}if(d>>>=w,f-=w,0===a.have){e.msg="invalid bit length repeat",a.mode=BAD;break}D=a.lens[a.have-1],b=3+(3&d),d>>>=2,f-=2}else if(17===u){for(S=w+3;f<S;){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}f-=w,D=0,b=3+(7&(d>>>=w)),d>>>=3,f-=3}else{for(S=w+7;f<S;){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}f-=w,D=0,b=11+(127&(d>>>=w)),d>>>=7,f-=7}if(a.have+b>a.nlen+a.ndist){e.msg="invalid bit length repeat",a.mode=BAD;break}for(;b--;)a.lens[a.have++]=D}}if(a.mode===BAD)break;if(0===a.lens[256]){e.msg="invalid code -- missing end-of-block",a.mode=BAD;break}if(a.lenbits=9,v={bits:a.lenbits},T=inflate_table(LENS,a.lens,0,a.nlen,a.lencode,0,a.work,v),a.lenbits=v.bits,T){e.msg="invalid literal/lengths set",a.mode=BAD;break}if(a.distbits=6,a.distcode=a.distdyn,v={bits:a.distbits},T=inflate_table(DISTS,a.lens,a.nlen,a.ndist,a.distcode,0,a.work,v),a.distbits=v.bits,T){e.msg="invalid distances set",a.mode=BAD;break}if(a.mode=LEN_,6===t)break e;case LEN_:a.mode=LEN;case LEN:if(r>=6&&l>=258){e.next_out=o,e.avail_out=l,e.next_in=s,e.avail_in=r,a.hold=d,a.bits=f,inflate_fast(e,h),o=e.next_out,n=e.output,l=e.avail_out,s=e.next_in,i=e.input,r=e.avail_in,d=a.hold,f=a.bits,a.mode===TYPE&&(a.back=-1);break}for(a.back=0;E=(p=a.lencode[d&(1<<a.lenbits)-1])>>>16&255,u=65535&p,!((w=p>>>24)<=f);){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}if(E&&!(240&E)){for(g=w,_=E,x=u;E=(p=a.lencode[x+((d&(1<<g+_)-1)>>g)])>>>16&255,u=65535&p,!(g+(w=p>>>24)<=f);){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}d>>>=g,f-=g,a.back+=g}if(d>>>=w,f-=w,a.back+=w,a.length=u,0===E){a.mode=LIT;break}if(32&E){a.back=-1,a.mode=TYPE;break}if(64&E){e.msg="invalid literal/length code",a.mode=BAD;break}a.extra=15&E,a.mode=LENEXT;case LENEXT:if(a.extra){for(S=a.extra;f<S;){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}a.length+=d&(1<<a.extra)-1,d>>>=a.extra,f-=a.extra,a.back+=a.extra}a.was=a.length,a.mode=DIST;case DIST:for(;E=(p=a.distcode[d&(1<<a.distbits)-1])>>>16&255,u=65535&p,!((w=p>>>24)<=f);){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}if(!(240&E)){for(g=w,_=E,x=u;E=(p=a.distcode[x+((d&(1<<g+_)-1)>>g)])>>>16&255,u=65535&p,!(g+(w=p>>>24)<=f);){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}d>>>=g,f-=g,a.back+=g}if(d>>>=w,f-=w,a.back+=w,64&E){e.msg="invalid distance code",a.mode=BAD;break}a.offset=u,a.extra=15&E,a.mode=DISTEXT;case DISTEXT:if(a.extra){for(S=a.extra;f<S;){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}a.offset+=d&(1<<a.extra)-1,d>>>=a.extra,f-=a.extra,a.back+=a.extra}if(a.offset>a.dmax){e.msg="invalid distance too far back",a.mode=BAD;break}a.mode=MATCH;case MATCH:if(0===l)break e;if(b=h-l,a.offset>b){if((b=a.offset-b)>a.whave&&a.sane){e.msg="invalid distance too far back",a.mode=BAD;break}b>a.wnext?(b-=a.wnext,k=a.wsize-b):k=a.wnext-b,b>a.length&&(b=a.length),m=a.window}else m=n,k=o-a.offset,b=a.length;b>l&&(b=l),l-=b,a.length-=b;do{n[o++]=m[k++]}while(--b);0===a.length&&(a.mode=LEN);break;case LIT:if(0===l)break e;n[o++]=a.length,l--,a.mode=LEN;break;case CHECK:if(a.wrap){for(;f<32;){if(0===r)break e;r--,d|=i[s++]<<f,f+=8}if(h-=l,e.total_out+=h,a.total+=h,h&&(e.adler=a.check=a.flags?crc32(a.check,n,h,o-h):adler32(a.check,n,h,o-h)),h=l,(a.flags?d:zswap32(d))!==a.check){e.msg="incorrect data check",a.mode=BAD;break}d=0,f=0}a.mode=LENGTH;case LENGTH:if(a.wrap&&a.flags){for(;f<32;){if(0===r)break e;r--,d+=i[s++]<<f,f+=8}if(d!==(4294967295&a.total)){e.msg="incorrect length check",a.mode=BAD;break}d=0,f=0}a.mode=DONE;case DONE:T=1;break e;case BAD:T=-3;break e;case MEM:return-4;default:return-2}return e.next_out=o,e.avail_out=l,e.next_in=s,e.avail_in=r,a.hold=d,a.bits=f,(a.wsize||h!==e.avail_out&&a.mode<BAD&&(a.mode<CHECK||4!==t))&&updatewindow(e,e.output,e.next_out,h-e.avail_out)?(a.mode=MEM,-4):(c-=e.avail_in,h-=e.avail_out,e.total_in+=c,e.total_out+=h,a.total+=h,a.wrap&&h&&(e.adler=a.check=a.flags?crc32(a.check,n,h,e.next_out-h):adler32(a.check,n,h,e.next_out-h)),e.data_type=a.bits+(a.last?64:0)+(a.mode===TYPE?128:0)+(a.mode===LEN_||a.mode===COPY_?256:0),(0===c&&0===h||4===t)&&0===T&&(T=-5),T)}function inflateEnd(e){if(!e||!e.state)return-2;var t=e.state;return t.window&&(t.window=null),e.state=null,0}function inflateGetHeader(e,t){var a;return e&&e.state&&2&(a=e.state).wrap?(a.head=t,t.done=!1,0):-2}function inflateSetDictionary(e,t){var a,i=t.length;return e&&e.state?0!==(a=e.state).wrap&&a.mode!==DICT?-2:a.mode===DICT&&adler32(1,t,i,0)!==a.check?-3:updatewindow(e,t,i,i)?(a.mode=MEM,-4):(a.havedict=1,0):-2}export{inflateReset,inflateReset2,inflateResetKeep,inflateInit,inflateInit2,inflate,inflateEnd,inflateGetHeader,inflateSetDictionary};export var inflateInfo="pako inflate (from Nodeca project)";
//# sourceMappingURL=/sm/798851185f6dcbaa6876ca8db1c518bd883c980d0f5187d93bad33c487aa34f3.map