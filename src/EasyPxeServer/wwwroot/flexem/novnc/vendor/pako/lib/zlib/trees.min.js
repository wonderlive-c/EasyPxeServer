/**
 * Minified by jsDelivr using Terser v5.39.0.
 * Original file: /npm/@flexem/novnc@1.1.6/vendor/pako/lib/zlib/trees.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import*as utils from"../utils/common.js";var Z_FIXED=4,Z_BINARY=0,Z_TEXT=1,Z_UNKNOWN=2;function zero(e){for(var _=e.length;--_>=0;)e[_]=0}var STORED_BLOCK=0,STATIC_TREES=1,DYN_TREES=2,MIN_MATCH=3,MAX_MATCH=258,LENGTH_CODES=29,LITERALS=256,L_CODES=LITERALS+1+LENGTH_CODES,D_CODES=30,BL_CODES=19,HEAP_SIZE=2*L_CODES+1,MAX_BITS=15,Buf_size=16,MAX_BL_BITS=7,END_BLOCK=256,REP_3_6=16,REPZ_3_10=17,REPZ_11_138=18,extra_lbits=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],extra_dbits=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],extra_blbits=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],bl_order=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],DIST_CODE_LEN=512,static_ltree=new Array(2*(L_CODES+2));zero(static_ltree);var static_dtree=new Array(2*D_CODES);zero(static_dtree);var _dist_code=new Array(DIST_CODE_LEN);zero(_dist_code);var _length_code=new Array(MAX_MATCH-MIN_MATCH+1);zero(_length_code);var base_length=new Array(LENGTH_CODES);zero(base_length);var static_l_desc,static_d_desc,static_bl_desc,base_dist=new Array(D_CODES);function StaticTreeDesc(e,_,t,i,n){this.static_tree=e,this.extra_bits=_,this.extra_base=t,this.elems=i,this.max_length=n,this.has_stree=e&&e.length}function TreeDesc(e,_){this.dyn_tree=e,this.max_code=0,this.stat_desc=_}function d_code(e){return e<256?_dist_code[e]:_dist_code[256+(e>>>7)]}function put_short(e,_){e.pending_buf[e.pending++]=255&_,e.pending_buf[e.pending++]=_>>>8&255}function send_bits(e,_,t){e.bi_valid>Buf_size-t?(e.bi_buf|=_<<e.bi_valid&65535,put_short(e,e.bi_buf),e.bi_buf=_>>Buf_size-e.bi_valid,e.bi_valid+=t-Buf_size):(e.bi_buf|=_<<e.bi_valid&65535,e.bi_valid+=t)}function send_code(e,_,t){send_bits(e,t[2*_],t[2*_+1])}function bi_reverse(e,_){var t=0;do{t|=1&e,e>>>=1,t<<=1}while(--_>0);return t>>>1}function bi_flush(e){16===e.bi_valid?(put_short(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)}function gen_bitlen(e,_){var t,i,n,r,s,d,a=_.dyn_tree,l=_.max_code,c=_.stat_desc.static_tree,o=_.stat_desc.has_stree,b=_.stat_desc.extra_bits,f=_.stat_desc.extra_base,u=_.stat_desc.max_length,p=0;for(r=0;r<=MAX_BITS;r++)e.bl_count[r]=0;for(a[2*e.heap[e.heap_max]+1]=0,t=e.heap_max+1;t<HEAP_SIZE;t++)(r=a[2*a[2*(i=e.heap[t])+1]+1]+1)>u&&(r=u,p++),a[2*i+1]=r,i>l||(e.bl_count[r]++,s=0,i>=f&&(s=b[i-f]),d=a[2*i],e.opt_len+=d*(r+s),o&&(e.static_len+=d*(c[2*i+1]+s)));if(0!==p){do{for(r=u-1;0===e.bl_count[r];)r--;e.bl_count[r]--,e.bl_count[r+1]+=2,e.bl_count[u]--,p-=2}while(p>0);for(r=u;0!==r;r--)for(i=e.bl_count[r];0!==i;)(n=e.heap[--t])>l||(a[2*n+1]!==r&&(e.opt_len+=(r-a[2*n+1])*a[2*n],a[2*n+1]=r),i--)}}function gen_codes(e,_,t){var i,n,r=new Array(MAX_BITS+1),s=0;for(i=1;i<=MAX_BITS;i++)r[i]=s=s+t[i-1]<<1;for(n=0;n<=_;n++){var d=e[2*n+1];0!==d&&(e[2*n]=bi_reverse(r[d]++,d))}}function tr_static_init(){var e,_,t,i,n,r=new Array(MAX_BITS+1);for(t=0,i=0;i<LENGTH_CODES-1;i++)for(base_length[i]=t,e=0;e<1<<extra_lbits[i];e++)_length_code[t++]=i;for(_length_code[t-1]=i,n=0,i=0;i<16;i++)for(base_dist[i]=n,e=0;e<1<<extra_dbits[i];e++)_dist_code[n++]=i;for(n>>=7;i<D_CODES;i++)for(base_dist[i]=n<<7,e=0;e<1<<extra_dbits[i]-7;e++)_dist_code[256+n++]=i;for(_=0;_<=MAX_BITS;_++)r[_]=0;for(e=0;e<=143;)static_ltree[2*e+1]=8,e++,r[8]++;for(;e<=255;)static_ltree[2*e+1]=9,e++,r[9]++;for(;e<=279;)static_ltree[2*e+1]=7,e++,r[7]++;for(;e<=287;)static_ltree[2*e+1]=8,e++,r[8]++;for(gen_codes(static_ltree,L_CODES+1,r),e=0;e<D_CODES;e++)static_dtree[2*e+1]=5,static_dtree[2*e]=bi_reverse(e,5);static_l_desc=new StaticTreeDesc(static_ltree,extra_lbits,LITERALS+1,L_CODES,MAX_BITS),static_d_desc=new StaticTreeDesc(static_dtree,extra_dbits,0,D_CODES,MAX_BITS),static_bl_desc=new StaticTreeDesc(new Array(0),extra_blbits,0,BL_CODES,MAX_BL_BITS)}function init_block(e){var _;for(_=0;_<L_CODES;_++)e.dyn_ltree[2*_]=0;for(_=0;_<D_CODES;_++)e.dyn_dtree[2*_]=0;for(_=0;_<BL_CODES;_++)e.bl_tree[2*_]=0;e.dyn_ltree[2*END_BLOCK]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function bi_windup(e){e.bi_valid>8?put_short(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function copy_block(e,_,t,i){bi_windup(e),i&&(put_short(e,t),put_short(e,~t)),utils.arraySet(e.pending_buf,e.window,_,t,e.pending),e.pending+=t}function smaller(e,_,t,i){var n=2*_,r=2*t;return e[n]<e[r]||e[n]===e[r]&&i[_]<=i[t]}function pqdownheap(e,_,t){for(var i=e.heap[t],n=t<<1;n<=e.heap_len&&(n<e.heap_len&&smaller(_,e.heap[n+1],e.heap[n],e.depth)&&n++,!smaller(_,i,e.heap[n],e.depth));)e.heap[t]=e.heap[n],t=n,n<<=1;e.heap[t]=i}function compress_block(e,_,t){var i,n,r,s,d=0;if(0!==e.last_lit)do{i=e.pending_buf[e.d_buf+2*d]<<8|e.pending_buf[e.d_buf+2*d+1],n=e.pending_buf[e.l_buf+d],d++,0===i?send_code(e,n,_):(send_code(e,(r=_length_code[n])+LITERALS+1,_),0!==(s=extra_lbits[r])&&send_bits(e,n-=base_length[r],s),send_code(e,r=d_code(--i),t),0!==(s=extra_dbits[r])&&send_bits(e,i-=base_dist[r],s))}while(d<e.last_lit);send_code(e,END_BLOCK,_)}function build_tree(e,_){var t,i,n,r=_.dyn_tree,s=_.stat_desc.static_tree,d=_.stat_desc.has_stree,a=_.stat_desc.elems,l=-1;for(e.heap_len=0,e.heap_max=HEAP_SIZE,t=0;t<a;t++)0!==r[2*t]?(e.heap[++e.heap_len]=l=t,e.depth[t]=0):r[2*t+1]=0;for(;e.heap_len<2;)r[2*(n=e.heap[++e.heap_len]=l<2?++l:0)]=1,e.depth[n]=0,e.opt_len--,d&&(e.static_len-=s[2*n+1]);for(_.max_code=l,t=e.heap_len>>1;t>=1;t--)pqdownheap(e,r,t);n=a;do{t=e.heap[1],e.heap[1]=e.heap[e.heap_len--],pqdownheap(e,r,1),i=e.heap[1],e.heap[--e.heap_max]=t,e.heap[--e.heap_max]=i,r[2*n]=r[2*t]+r[2*i],e.depth[n]=(e.depth[t]>=e.depth[i]?e.depth[t]:e.depth[i])+1,r[2*t+1]=r[2*i+1]=n,e.heap[1]=n++,pqdownheap(e,r,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],gen_bitlen(e,_),gen_codes(r,l,e.bl_count)}function scan_tree(e,_,t){var i,n,r=-1,s=_[1],d=0,a=7,l=4;for(0===s&&(a=138,l=3),_[2*(t+1)+1]=65535,i=0;i<=t;i++)n=s,s=_[2*(i+1)+1],++d<a&&n===s||(d<l?e.bl_tree[2*n]+=d:0!==n?(n!==r&&e.bl_tree[2*n]++,e.bl_tree[2*REP_3_6]++):d<=10?e.bl_tree[2*REPZ_3_10]++:e.bl_tree[2*REPZ_11_138]++,d=0,r=n,0===s?(a=138,l=3):n===s?(a=6,l=3):(a=7,l=4))}function send_tree(e,_,t){var i,n,r=-1,s=_[1],d=0,a=7,l=4;for(0===s&&(a=138,l=3),i=0;i<=t;i++)if(n=s,s=_[2*(i+1)+1],!(++d<a&&n===s)){if(d<l)do{send_code(e,n,e.bl_tree)}while(0!=--d);else 0!==n?(n!==r&&(send_code(e,n,e.bl_tree),d--),send_code(e,REP_3_6,e.bl_tree),send_bits(e,d-3,2)):d<=10?(send_code(e,REPZ_3_10,e.bl_tree),send_bits(e,d-3,3)):(send_code(e,REPZ_11_138,e.bl_tree),send_bits(e,d-11,7));d=0,r=n,0===s?(a=138,l=3):n===s?(a=6,l=3):(a=7,l=4)}}function build_bl_tree(e){var _;for(scan_tree(e,e.dyn_ltree,e.l_desc.max_code),scan_tree(e,e.dyn_dtree,e.d_desc.max_code),build_tree(e,e.bl_desc),_=BL_CODES-1;_>=3&&0===e.bl_tree[2*bl_order[_]+1];_--);return e.opt_len+=3*(_+1)+5+5+4,_}function send_all_trees(e,_,t,i){var n;for(send_bits(e,_-257,5),send_bits(e,t-1,5),send_bits(e,i-4,4),n=0;n<i;n++)send_bits(e,e.bl_tree[2*bl_order[n]+1],3);send_tree(e,e.dyn_ltree,_-1),send_tree(e,e.dyn_dtree,t-1)}function detect_data_type(e){var _,t=4093624447;for(_=0;_<=31;_++,t>>>=1)if(1&t&&0!==e.dyn_ltree[2*_])return Z_BINARY;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return Z_TEXT;for(_=32;_<LITERALS;_++)if(0!==e.dyn_ltree[2*_])return Z_TEXT;return Z_BINARY}zero(base_dist);var static_init_done=!1;function _tr_init(e){static_init_done||(tr_static_init(),static_init_done=!0),e.l_desc=new TreeDesc(e.dyn_ltree,static_l_desc),e.d_desc=new TreeDesc(e.dyn_dtree,static_d_desc),e.bl_desc=new TreeDesc(e.bl_tree,static_bl_desc),e.bi_buf=0,e.bi_valid=0,init_block(e)}function _tr_stored_block(e,_,t,i){send_bits(e,(STORED_BLOCK<<1)+(i?1:0),3),copy_block(e,_,t,!0)}function _tr_align(e){send_bits(e,STATIC_TREES<<1,3),send_code(e,END_BLOCK,static_ltree),bi_flush(e)}function _tr_flush_block(e,_,t,i){var n,r,s=0;e.level>0?(e.strm.data_type===Z_UNKNOWN&&(e.strm.data_type=detect_data_type(e)),build_tree(e,e.l_desc),build_tree(e,e.d_desc),s=build_bl_tree(e),n=e.opt_len+3+7>>>3,(r=e.static_len+3+7>>>3)<=n&&(n=r)):n=r=t+5,t+4<=n&&-1!==_?_tr_stored_block(e,_,t,i):e.strategy===Z_FIXED||r===n?(send_bits(e,(STATIC_TREES<<1)+(i?1:0),3),compress_block(e,static_ltree,static_dtree)):(send_bits(e,(DYN_TREES<<1)+(i?1:0),3),send_all_trees(e,e.l_desc.max_code+1,e.d_desc.max_code+1,s+1),compress_block(e,e.dyn_ltree,e.dyn_dtree)),init_block(e),i&&bi_windup(e)}function _tr_tally(e,_,t){return e.pending_buf[e.d_buf+2*e.last_lit]=_>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&_,e.pending_buf[e.l_buf+e.last_lit]=255&t,e.last_lit++,0===_?e.dyn_ltree[2*t]++:(e.matches++,_--,e.dyn_ltree[2*(_length_code[t]+LITERALS+1)]++,e.dyn_dtree[2*d_code(_)]++),e.last_lit===e.lit_bufsize-1}export{_tr_init,_tr_stored_block,_tr_flush_block,_tr_tally,_tr_align};
//# sourceMappingURL=/sm/c171b94a90f6ab856523ddc74bdd8399a3fb39956a1fdc8ca3cbb0635fc206de.map