/**
 * Minified by jsDelivr using Terser v5.39.0.
 * Original file: /npm/@flexem/novnc@1.1.6/core/decoders/hextile.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import*as Log from"../util/logging.js";export default class HextileDecoder{constructor(){this._tiles=0,this._lastsubencoding=0}decodeRect(t,i,s,e,l,r,o){for(0===this._tiles&&(this._tiles_x=Math.ceil(s/16),this._tiles_y=Math.ceil(e/16),this._total_tiles=this._tiles_x*this._tiles_y,this._tiles=this._total_tiles);this._tiles>0;){let o=1;if(l.rQwait("HEXTILE",o))return!1;let n=l.rQ,_=l.rQi,h=n[_];if(h>30)throw new Error("Illegal hextile subencoding (subencoding: "+h+")");const a=this._total_tiles-this._tiles,c=t+16*(a%this._tiles_x),g=i+16*Math.floor(a/this._tiles_x),f=Math.min(16,t+s-c),u=Math.min(16,i+e-g);if(1&h)o+=f*u*4;else if(2&h&&(o+=4),4&h&&(o+=4),8&h){if(o++,l.rQwait("HEXTILE",o))return!1;let t=n[_+o-1];o+=16&h?6*t:2*t}if(l.rQwait("HEXTILE",o))return!1;if(_++,0===h)1&this._lastsubencoding?Log.Debug("     Ignoring blank after RAW"):r.fillRect(c,g,f,u,this._background);else if(1&h)r.blitImage(c,g,f,u,n,_),_+=o-1;else{if(2&h&&(this._background=[n[_],n[_+1],n[_+2],n[_+3]],_+=4),4&h&&(this._foreground=[n[_],n[_+1],n[_+2],n[_+3]],_+=4),r.startTile(c,g,f,u,this._background),8&h){let t=n[_];_++;for(let i=0;i<t;i++){let t;16&h?(t=[n[_],n[_+1],n[_+2],n[_+3]],_+=4):t=this._foreground;const i=n[_];_++;const s=i>>4,e=15&i,l=n[_];_++;const o=1+(l>>4),a=1+(15&l);r.subTile(s,e,o,a,t)}}r.finishTile()}l.rQi=_,this._lastsubencoding=h,this._tiles--}return!0}}
//# sourceMappingURL=/sm/04ccdf32562147e5c10efc8db6dd39bad53d4db81823045b800e6891b4653657.map