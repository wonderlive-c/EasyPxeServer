@page "/pxe"
@inject PxeServerService PxeServerService
@inject DhcpService      DhcpService
@inject TftpService      TftpService
@inject IToastService    ToastService
@inject IDialogService   DialogService
@using PxeServices
@using System.Drawing


<PageTitle>PXE服务器管理</PageTitle>

<FluentStack Orientation="Orientation.Vertical">

    <FluentCard>
            <FluentGrid>
                <FluentGridItem Size="4">
                    <FluentStack Orientation="Orientation.Horizontal">
                        <FluentText>当前状态：</FluentText>
                    <FluentBadge Appearance="@(PxeServerService.IsRunning? Appearance.Accent: Appearance.Neutral)" BackgroundColor="@(PxeServerService.IsRunning? "Green": "Red")">
                            @(PxeServerService.IsRunning ? "运行中" : "已停止")
                        </FluentBadge>
                    </FluentStack>
                </FluentGridItem>
                <FluentGridItem Size="8" HorizontalAlignment="HorizontalAlignment.Right">
                    <FluentButtonGroup>
                        <FluentButton Appearance="Appearance.Accent"
                                      @onclick="StartServerAsync"
                                      disabled="@PxeServerService.IsRunning">
                            启动服务器
                        </FluentButton>
                        <FluentButton Appearance="Appearance.Neutral"
                                      @onclick="StopServerAsync"
                                      disabled="@(!PxeServerService.IsRunning)">
                            停止服务器
                        </FluentButton>
                        <FluentButton Appearance="Appearance.Accent"
                                      @onclick="RestartServerAsync"
                                      disabled="@(!PxeServerService.IsRunning)">
                            重启服务器
                        </FluentButton>
                    </FluentButtonGroup>
                </FluentGridItem>
            </FluentGrid>
    </FluentCard>


    <!-- 网络接口选择 -->
    <FluentCard class="mt-4">
        <FluentCardHeader>
            <FluentText Variant="TextVariants.Title3">网络设置</FluentText>
        </FluentCardHeader>
        <FluentCardBody>
            <FluentStack Spacing="16px" Orientation="Orientation.Vertical">
                <FluentStack Orientation="Orientation.Vertical" Spacing="8px">
                    <FluentLabel Required="true">选择网络接口</FluentLabel>
                    <FluentSelect Items="NetworkInterfaces"
                                  OptionText="@(i => i.Name + " - " + i.IPAddress)"
                                  OptionValue="@(i => i.IPAddress)"
                                  @bind-Value="SelectedInterfaceIp"
                                  Disabled="@PxeServerService.IsRunning"
                                  Width="300px">
                    </FluentSelect>
                </FluentStack>

                <FluentGrid>
                    <FluentGridItem Size="6">
                        <FluentStack Orientation="Orientation.Vertical" Spacing="12px">
                            <FluentLabel>DHCP 设置</FluentLabel>
                            <FluentStack Orientation="Orientation.Vertical" Spacing="8px">
                                <FluentLabel For="bootFileName">启动文件名</FluentLabel>
                                <FluentTextField
                                    Id="bootFileName"
                                    Value="@DhcpService.BootFileName"
                                    Placeholder="pxeboot.0"
                                    Disabled="@PxeServerService.IsRunning"/>
                            </FluentStack>
                            <FluentStack Orientation="Orientation.Vertical" Spacing="8px">
                                <FluentLabel For="nextServerIp">下一跳服务器IP</FluentLabel>
                                <FluentTextField
                                    Id="nextServerIp"
                                    @bind-Value="DhcpService.NextServerIp"
                                    Placeholder="TFTP服务器IP地址"
                                    Disabled="@PxeServerService.IsRunning"/>
                            </FluentStack>
                        </FluentStack>
                    </FluentGridItem>

                    <FluentGridItem Size="6">
                        <FluentStack Orientation="Orientation.Vertical" Spacing="12px">
                            <FluentLabel>TFTP 设置</FluentLabel>
                            <FluentStack Orientation="Orientation.Vertical" Spacing="8px">
                                <FluentLabel For="rootDirectory">根目录</FluentLabel>
                                <FluentTextField
                                    Id="rootDirectory"
                                    Value="@TftpService.RootDirectory"
                                    Placeholder="tftpboot"
                                    Disabled="@PxeServerService.IsRunning"/>
                            </FluentStack>
                            <FluentStack Orientation="Orientation.Vertical" Spacing="8px">
                                <FluentLabel>状态</FluentLabel>
                                <FluentStack Orientation="Orientation.Vertical">
                                    <FluentText>TFTP服务器：@(TftpService.IsRunning ? "运行中" : "已停止")</FluentText>
                                </FluentStack>
                            </FluentStack>
                        </FluentStack>
                    </FluentGridItem>
                </FluentGrid>
            </FluentStack>
        </FluentCardBody>
    </FluentCard>


</FluentStack>

@code {

    private List<NetworkInterfaceInfo> NetworkInterfaces   { get; set; } = [];
    private string?                    SelectedInterfaceIp { get; set; }

    protected override void OnInitialized()
    {
        // 获取网络接口列表
        NetworkInterfaces = PxeServerService.GetNetworkInterfaces();
        if (string.IsNullOrEmpty(SelectedInterfaceIp)) { SelectedInterfaceIp = NetworkInterfaces.FirstOrDefault()?.IPAddress; }

        // 监听状态变化
        PxeServerService.StatusChanged += delegate { InvokeAsync(StateHasChanged); };
    }

    private async Task StartServerAsync()
    {
        try
        {
            if (string.IsNullOrEmpty(SelectedInterfaceIp))
            {
                var dialogInstance = await DialogService.ShowDialogAsync(@<div>
                                                                             <p> 请先选择网络接口 </p>
                                                                         </div>,
                                                                         new DialogParameters
                                                                         {
                                                                             Title = $"提示", TrapFocus = false, DialogType = DialogType.MessageBox, Modal = false, ShowDismiss = false, PrimaryAction = "确定"
                                                                         });
                await dialogInstance.Result;
                await dialogInstance.CloseAsync();
                return;
            }

            // 设置服务的网络接口
            DhcpService.SelectedInterfaceIp = SelectedInterfaceIp;
            TftpService.SelectedInterfaceIp = SelectedInterfaceIp;

            // 如果没有设置下一跳服务器IP，默认使用选定的接口IP
            if (string.IsNullOrEmpty(DhcpService.NextServerIp)) { DhcpService.NextServerIp = SelectedInterfaceIp; }

            await PxeServerService.StartAsync(default);
            ToastService.ShowSuccess("PXE服务器已成功启动");
        }
        catch (Exception ex) { ToastService.ShowError("启动服务器失败：" + ex.Message, 3000); }
    }

    private async Task StopServerAsync()
    {
        try
        {
            await PxeServerService.StopAsync(default);
            ToastService.ShowSuccess("PXE服务器已成功停止");
        }
        catch (Exception ex) { ToastService.ShowError("停止服务器失败：" + ex.Message, 3000); }
    }

    private async Task RestartServerAsync()
    {
        try
        {
            await PxeServerService.RestartAsync(default);
            ToastService.ShowSuccess("PXE服务器已成功重启");
        }
        catch (Exception ex) { ToastService.ShowError("重启服务器失败：" + ex.Message, 3000); }
    }

    public void Dispose() { PxeServerService.StatusChanged -= StateHasChanged; }
}